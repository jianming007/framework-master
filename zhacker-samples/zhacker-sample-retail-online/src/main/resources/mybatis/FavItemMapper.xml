<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="top.zhacker.sample.retail.online.item.domain.item.fav.FavItemRepo">
    <resultMap id="FavItemMap" type="top.zhacker.sample.retail.online.item.domain.item.fav.FavItem">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="item_id" property="itemId"/>
        <result column="version" property="version"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        fav_item
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        user_id,
        item_id,
        version,
        created_at,
        updated_at

    </sql>

    <sql id="vals">
        #{userId},
        #{itemId},
        #{version},
        now(),
        now()

    </sql>

    <sql id="criteria">
        <if test="userId != null">AND user_id = #{userId}</if>

    </sql>

    <insert id="create" parameterType="top.zhacker.sample.retail.online.item.domain.item.fav.FavItem" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="FavItemMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByItemId" parameterType="map" resultMap="FavItemMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE user_id = #{userId} and item_id = #{itemId}
        limit 1
    </select>

    <update id="update" parameterType="top.zhacker.sample.retail.online.item.domain.item.fav.FavItem">
        UPDATE <include refid="tb"/>
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="version != null">version = #{version},</if>



            updated_at=now(),
            version = version + 1
        </set>
        WHERE id = #{id} and version = #{version}
    </update>

    <delete id="deleteByItemId" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE user_id = #{userId} and item_id = #{itemId}
    </delete>

    <select id="list" parameterType="map" resultMap="FavItemMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="page" parameterType="map" resultMap="FavItemMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by id desc
        LIMIT #{offset}, #{limit}
    </select>

</mapper>
