<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="top.zhacker.sample.retail.online.item.domain.brand.BrandRepo">
    <resultMap id="BrandMap" type="top.zhacker.sample.retail.online.item.domain.brand.Brand">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="logo" property="logo"/>
        <result column="score" property="score"/>
        <result column="hidden" property="hidden"/>
        <result column="version" property="version"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        brand
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name,
        logo,
        score,
        hidden,
        version,
        created_at,
        updated_at

    </sql>

    <sql id="vals">
        #{name},
        #{logo},
        #{score},
        #{hidden},
        0,
        now(),
        now()

    </sql>

    <sql id="criteria">
        <if test="name != null">AND name = #{name}</if>
        <if test="hidden != null">AND hidden = #{hidden}</if>

    </sql>

    <insert id="create" parameterType="top.zhacker.sample.retail.online.item.domain.brand.Brand" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="BrandMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByNamePart" parameterType="string" resultMap="BrandMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE name like concat('%', #{namePart},'%')
    </select>

    <select id="findByName" parameterType="string" resultMap="BrandMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE name = #{name} limit 1
    </select>


    <update id="update" parameterType="top.zhacker.sample.retail.online.item.domain.brand.Brand">
        UPDATE <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="logo != null">logo = #{logo},</if>
            <if test="score != null">score = #{score},</if>
            <if test="hidden != null">hidden = #{hidden},</if>

            updated_at=now(),
            version = version + 1
        </set>
        WHERE id = #{id} and version = #{version}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="BrandMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="page" parameterType="map" resultMap="BrandMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by score desc, id desc
        LIMIT #{offset}, #{limit}
    </select>

</mapper>
