<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="top.zhacker.sample.retail.online.item.domain.exhibition.ExhibitionRepo">
    <resultMap id="ExhibitionMap" type="top.zhacker.sample.retail.online.item.domain.exhibition.Exhibition">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="main_photo" property="mainPhoto"/>
        <result column="navigate_photo" property="navigatePhoto"/>
        <result column="start_at" property="startAt"/>
        <result column="end_at" property="endAt"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="score" property="score"/>
        <result column="version" property="version"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        exhibition
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name,
        description,
        main_photo,
        navigate_photo,
        start_at,
        end_at,
        type,
        status,
        score,
        version,
        created_at,
        updated_at

    </sql>

    <sql id="vals">
        #{name},
        #{description},
        #{mainPhoto},
        #{navigatePhoto},
        #{startAt},
        #{endAt},
        #{type},
        #{status},
        #{score},
        0,
        now(),
        now()

    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="name != null">AND name like concat('%', #{name}, '%')</if>
        <if test="type != null">AND type = #{type}</if>
        <if test="statuses != null and statuses.size > 0">
            AND status in
            <foreach collection="statuses" item="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>


    </sql>

    <insert id="create" parameterType="top.zhacker.sample.retail.online.item.domain.exhibition.Exhibition" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="ExhibitionMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="top.zhacker.sample.retail.online.item.domain.exhibition.Exhibition">
        UPDATE <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="mainPhoto != null">main_photo = #{mainPhoto},</if>
            <if test="navigatePhoto != null">navigate_photo = #{navigatePhoto},</if>
            <if test="startAt != null">start_at = #{startAt},</if>
            <if test="endAt != null">end_at = #{endAt},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="score != null">score = #{score},</if>

            updated_at=now(),
            version = version + 1
        </set>
        WHERE id = #{id} and version = #{version}
    </update>

    <update id="batchStart">
        UPDATE <include refid="tb"/>
        <set>
            status = 1
        </set>
        where status = 0 and start_at &lt; now()
    </update>

    <update id="batchEnd">
        UPDATE <include refid="tb"/>
        <set>
            status = -1
        </set>
        where status = 1 and end_at &lt; now()
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="ExhibitionMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="ExhibitionMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by score desc, id desc
        LIMIT #{offset}, #{limit}
    </select>

</mapper>
