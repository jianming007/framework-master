<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="top.zhacker.sample.retail.online.item.domain.item.sku.purchase.PurchaseOrderRepo">
    <resultMap id="PurchaseOrderMap" type="top.zhacker.sample.retail.online.item.domain.item.sku.purchase.PurchaseOrder">
        <id column="id" property="id"/>
        <result column="vendor_id" property="vendorId"/>
        <result column="item_id" property="itemId"/>
        <result column="sku_id" property="skuId"/>
        <result column="batch_no" property="batchNo"/>
        <result column="cost_price" property="costPrice"/>
        <result column="settle_price" property="settlePrice"/>
        <result column="quantity" property="quantity"/>
        <result column="sell_count" property="sellCount"/>
        <result column="settle_count" property="settleCount"/>
        <result column="version" property="version"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        purchase_order
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        vendor_id,
        item_id,
        sku_id,
        batch_no,
        cost_price,
        settle_price,
        quantity,
        sell_count,
        settle_count,
        version,
        created_at,
        updated_at

    </sql>

    <sql id="vals">
        #{vendorId},
        #{itemId},
        #{skuId},
        #{batchNo},
        #{costPrice},
        #{settlePrice},
        #{quantity},
        #{sellCount},
        #{settleCount},
        #{version},
        now(),
        now()

    </sql>

    <sql id="criteria">

        <if test="vendorId != null">AND vendor_id = #{vendorId}</if>
        <if test="skuId != null">AND sku_id = #{skuId}</if>
        <if test="batchNo != null">AND batch_no = #{batchNo}</if>



    </sql>

    <insert id="create" parameterType="top.zhacker.sample.retail.online.item.domain.item.sku.purchase.PurchaseOrder" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findLatestBySkuId" parameterType="long" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE sku_id = #{skuId}
        order by id desc
        limit 1
    </select>

    <select id="findByBatchNo" parameterType="string" resultMap="PurchaseOrderMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE batch_no = #{batch_no} limit 1
    </select>

    <update id="update" parameterType="top.zhacker.sample.retail.online.item.domain.item.sku.purchase.PurchaseOrder">
        UPDATE <include refid="tb"/>
        <set>
            <if test="vendorId != null">vendor_id = #{vendorId},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="skuId != null">sku_id = #{skuId},</if>
            <if test="batchNo != null">batch_no = #{batchNo},</if>
            <if test="costPrice != null">cost_price = #{costPrice},</if>
            <if test="settlePrice != null">settle_price = #{settlePrice},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="sellCount != null">sell_count = #{sellCount},</if>
            <if test="settleCount != null">settle_count = #{settleCount},</if>



            updated_at=now(),
            version = version + 1
        </set>
        WHERE id = #{id} and version = #{version}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="PurchaseOrderMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="page" parameterType="map" resultMap="PurchaseOrderMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by id desc
        LIMIT #{offset}, #{limit}
    </select>

</mapper>
